{"version":3,"file":"static/js/357.bde61988.chunk.js","mappings":"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","sources":["storage.js","analysis/calculateAnalysis.js","worker.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["import Dexie from 'dexie';\n/*\n|----------------------------|\n| Declare your database      |\n|----------------------------|\n*/\n\nconst db = new Dexie('AppDatabase');\n\n// Declare tables, IDs and indexes\ndb.version(1).stores({\n    objectCache: '++id, key, value'\n});\n\nexport async function getItemGZIP(key) {\n    const result = await db.objectCache.where('key').equals(key).toArray();;\n\n    if (result && result.length > 0) {\n        if (result[0]) {\n            // console.log(\"Got db result\", result, result[0].value)\n            return JSON.parse(result[0].value);\n        }\n\n        return []\n\n    } else {\n        return []\n    }\n}\n\nexport async function setItemGZIP(key, value) {\n\n    let currentValue = await db.objectCache.where('key').equals(key).toArray();\n\n    if (currentValue.length === 0) {\n        let result = await db.objectCache.add({key, value: JSON.stringify(value)}).then(function (updated) {\n            if (updated) {\n                console.log(\"New record inserted for \" + key);\n            } else {\n                console.log(\"Nothing was updated - there were no item with primary key: \" + currentValue.id);\n            }\n        });;\n    } else {\n\n        let result = await db.objectCache.update(currentValue[0].id, {key, value: JSON.stringify(value)}).then(function (updated) {\n            if (updated) {\n                console.log(\"Key updated\");\n            } else {\n                console.log(\"Nothing was updated - there were no item with primary key: \" + currentValue.id);\n            }\n        });\n    }\n}\n","import {Chess} from 'chess.js'\nimport { getItemGZIP, setItemGZIP } from '../storage';\n\nfunction calculateAnalysis(analysisDatabase, repertoire, game, playerName) {\n    \n    let moveArrow;\n\n    if (analysisDatabase[game.url]) {\n        // skip for now.r We can consider reworking this system when lines are more dynamically updated.\n        // console.log(`Found analysis for ${game.url}`);\n        return analysisDatabase\n    }\n\n    // console.log(`calculating analysis for ${game.url}`);\n\n    //console.log(game.pgn);\n    //console.log(new Chess());\n    // this is single analysis for one game\n    const analysis = {arrows: [], notes: \"No notes found.\"}\n    let chess_game = new Chess();\n    chess_game.loadPgn(game.pgn);\n\n    // TODO unhardcode\n    let invert_board = chess_game.header().Black === playerName;\n\n    let foundIntersection = false;\n\n\n    let last_moves = [];\n    let finalMoveIndex = 0;\n\n    let chess_game_step_by_step = new Chess();\n    let checkFurther = false;\n\n    let last_fen = '';\n\n    // don't recompute lines\n    const gameCache = {};\n\n    // attempt to rewind to last theory spot\n    for (let i = 0; i < chess_game.history().length; i++) {\n\n        last_fen = chess_game_step_by_step.fen();\n        let move_made = chess_game_step_by_step.move(chess_game.history()[i]);\n\n        let fen = chess_game_step_by_step.fen();\n\n        if (repertoire[fen]) {\n            // recognized at least one\n            checkFurther = true;\n        }\n        if (checkFurther && !repertoire[fen]) {\n            //console.log(\"Couldn't find \", chess_game_step_by_step.ascii())\n            let lines = repertoire[last_fen] || [];\n            finalMoveIndex = i;\n\n            //console.log(\"Left at line\", finalMoveIndex);\n            //console.log(\"Lines are\", lines);\n            let next_moves = lines.map(line => {\n                let problyMove;\n\n                if (gameCache[line]) {\n\n                    problyMove = gameCache[line];\n                    problyMove = problyMove.history().slice(i, i + 1);\n\n                } else {\n                    problyMove = new Chess();\n                    problyMove.loadPgn(line)\n\n                    gameCache[line] = problyMove;\n\n                    problyMove = problyMove.history().slice(i, i + 1);\n                }\n\n                if (problyMove && problyMove.length > 0) {\n                    // console.log(\"\")\n                    return problyMove[0];\n                } else {\n                    return \"oops\"\n                }\n            });\n\n\n            last_moves = [ ... (next_moves.filter(moveName => moveName !== \"oops\")) ];\n\n            foundIntersection = true;\n            analysis.foundIntersection = true;\n\n            let [fromX, fromY] = square_to_coordinates(move_made.from);\n            let [toX, toY] = square_to_coordinates(move_made.to);\n\n            analysis.invert_board = invert_board;\n            if (invert_board) {\n                toY = 9 - toY;\n                fromY = 9 - fromY;\n                toX = 9 - toX;\n                fromX = 9 - fromX;\n            }\n\n            let arrowConfig = {\n                color: \"red\",\n                fromX, fromY,\n                destX: toX,\n                destY: toY,\n                san: move_made.san\n            }\n\n            analysis.arrows.push(arrowConfig)\n\n            break;\n        }\n    }\n\n    if (foundIntersection) {\n        last_moves = [...new Set(last_moves)];\n    }\n\n    let next_move_arrows = last_moves.map(last_move => {\n        let cloned_game = new Chess(last_fen);\n\n        let move;\n        try {\n            move = cloned_game.move(last_move);\n        } catch (e) {\n            console.log(\"e\", e);\n            console.log(last_move);\n            console.log(cloned_game.ascii());\n            return '';\n        }\n\n        // console.log(\"Got a move:\", move);\n\n        let [fromX, fromY] = square_to_coordinates(move.from);\n        let [toX, toY] = square_to_coordinates(move.to);\n\n        if (invert_board) {\n            toY = 9 - toY;\n            fromY = 9 - fromY;\n            toX = 9 - toX;\n            fromX = 9 - fromX;\n        }\n\n        const arrowConfig = {\n            color: \"green\",\n            fromX,\n            fromY,\n            destX: toX,\n            destY: toY,\n            moveSan: move.san\n        }\n\n        analysis.arrows.push(arrowConfig);\n    });\n\n    // console.time(\"new Chess(last_fen)\")\n    let chess_game_display = new Chess(last_fen);\n    // console.timeEnd(\"new Chess(last_fen)\")\n\n    if (!foundIntersection) {\n        chess_game_display.loadPgn(game.pgn)\n        //console.log(\"No intersection, loaded pgn instead\");\n        last_fen = game.pgn\n    }\n    next_move_arrows.push(moveArrow);\n\n    let advice = 'No advice found.';\n\n    analysis.result = chess_game.header().Result\n\n    analysis.fen_at_departure = chess_game_display.fen();\n    analysis.you_left_book =\n        foundIntersection && (\n        chess_game_display.turn() === \"w\" ?\n            chess_game.header().White === playerName :\n            chess_game.header().Black === playerName);\n\n    if (foundIntersection) {\n        if (analysis.you_left_book) {\n            advice = \"You left book on this one. Study the lines from the repertoire.\"\n        } else {\n            advice = \"They left book. Consider analyzing the move to get an idea of how to play against it.\"\n        }\n    } else {\n        advice = \"This position was not found in the repertoire. Consider expanding it for the below opening name.\"\n    }\n\n    // console.log(\"turn()\", chess_game.turn());\n    // console.log(game);\n\n    analysis.advice = advice;\n    analysis.displayFEN = chess_game_display.fen();\n\n    analysis.headers = chess_game.header();\n\n    const path = new URL(analysis.headers.ECOUrl).pathname;\n    // Get the last path segment and replace hyphens with spaces\n    const openingName = path.split('/').pop().replace(/-/g, ' ').replace(/[0-9].*/g, '');\n\n    analysis.openingFamily = openingName;\n\n    // console.log(\"Got analysis\", analysis)\n\n    analysisDatabase[game.url] = analysis;\n\n    return analysis;\n}\n\n\nfunction square_to_coordinates(inputString) {\n    // Check if the input string is valid\n\n    // Extract letter and number\n    const letter = inputString.charAt(0);\n    const number = parseInt(inputString.charAt(1));\n\n    // Calculate the index of the letter (a=1, b=2, ..., h=8)\n    const letterIndex = letter.charCodeAt(0) - 'a'.charCodeAt(0) + 1;\n\n    // Return a list with the calculated values\n    return [letterIndex, number];\n}\n\nexport default calculateAnalysis;","import calculateAnalysis from \"./analysis/calculateAnalysis\";\n\nconsole.log(\"Worker is running\");\n\nlet receiver = async (message) => {\n    // console.log(\"Starting to work\", message)\n    // { data: { analysisDatabase, repertoire, games, playerName } }\n    let { data: { analysisDatabase, repertoire, games, playerName } } = message;\n    let currentAnalysisDatabase = typeof analysisDatabase === \"object\" ? analysisDatabase : {};\n\n    if (typeof repertoire !== \"object\" || Object.keys(repertoire).length === 0) {\n        console.log(\"No repertoire to work with.\")\n        return;\n    }\n\n    console.log(\"Starting to process \" + games.length + \" games.\");\n\n    let i = 0;\n\n    for (let game of games) {\n        i++;\n\n        console.time(\"calculateAnalysis\")\n        let value = calculateAnalysis(currentAnalysisDatabase, repertoire, game, playerName);\n        console.timeEnd(\"calculateAnalysis\")\n\n        currentAnalysisDatabase[game.url] = value;\n\n        if (i > 0 && i % 10 === 0) {\n\n            console.log(i);\n            message.target.postMessage({\n                action: \"SET_ANALYSIS_DATABASE\",\n                currentAnalysisDatabase: currentAnalysisDatabase\n            });\n        }\n    }\n\n    // post final contents\n    message.target.postMessage({\n        action: \"SET_ANALYSIS_DATABASE\",\n        currentAnalysisDatabase: currentAnalysisDatabase\n    });\n};\n\n/* eslint-disable no-restricted-globals */\nself.onchange = receiver;\nself.onmessage = receiver;\n\n// export default {\n//     onchange: receiver,\n//     onmessage: receiver\n// }","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [416], () => (__webpack_require__(357)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"eeba4c39\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"/book-it/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t357: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkbook_it\"] = self[\"webpackChunkbook_it\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(416).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["db","Dexie","square_to_coordinates","inputString","letter","charAt","number","parseInt","charCodeAt","version","stores","objectCache","analysisDatabase","repertoire","game","playerName","url","analysis","arrows","notes","chess_game","Chess","loadPgn","pgn","invert_board","header","Black","foundIntersection","last_moves","finalMoveIndex","chess_game_step_by_step","checkFurther","last_fen","gameCache","i","history","length","fen","move_made","move","lines","map","line","problyMove","slice","filter","moveName","fromX","fromY","from","toX","toY","to","arrowConfig","color","destX","destY","san","push","Set","next_move_arrows","last_move","cloned_game","e","console","log","ascii","moveSan","chess_game_display","moveArrow","advice","result","Result","fen_at_departure","you_left_book","turn","White","displayFEN","headers","openingName","URL","ECOUrl","pathname","split","pop","replace","openingFamily","receiver","async","data","games","message","currentAnalysisDatabase","Object","keys","time","value","calculateAnalysis","timeEnd","target","postMessage","action","self","onchange","onmessage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","x","__webpack_exports__","O","deferred","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","key","splice","r","d","definition","o","defineProperty","enumerable","get","f","chunkId","Promise","all","reduce","promises","u","miniCssF","obj","prop","prototype","hasOwnProperty","call","p","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","next","then"],"sourceRoot":""}